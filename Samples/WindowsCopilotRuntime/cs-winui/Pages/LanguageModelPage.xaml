<!-- Copyright (c) Microsoft Corporation.
 Licensed under the MIT License. -->

<!--xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"-->
<!--NU1202: Package Microsoft.Toolkit.Uwp.UI.Animations 7.1.0-rc1 is not compatible with net5.0-windows10.0.19041 (.NETCoreApp,Version=v5.0) / win10-x86. Package Microsoft.Toolkit.Uwp.UI.Animations 7.1.0-rc1 supports: uap10.0.17763 (UAP,Version=v10.0.17763)-->
<Page x:Name="page"
      x:Class="WindowsCopilotRuntimeSample.Pages.LanguageModelPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:local="using:WindowsCopilotRuntimeSample"
      xmlns:pages="using:WindowsCopilotRuntimeSample.Pages"
      xmlns:controls="using:WindowsCopilotRuntimeSample.Controls"
      xmlns:models="using:WindowsCopilotRuntimeSample.ViewModels"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
      mc:Ignorable="d"
      Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
      d:DataContext="{d:DesignInstance Type=models:LanguageModelViewModel}"
      DataContext="{Binding LanguageModel}"
      NavigationCacheMode="Enabled">

    <Page.Resources>
        <DataTemplate x:Key="SeverityLevelItemTemplate">
            <TextBlock Text="{Binding Converter={StaticResource ContentFilterOptionsSeverityLevelConverter}}"/>
        </DataTemplate>
    </Page.Resources>

    <ScrollViewer VerticalScrollBarVisibility="Auto"
            HorizontalAlignment="Stretch">
        <StackPanel Orientation="Vertical"
                HorizontalAlignment="Stretch"
                Margin="20">

            <TextBlock Text="Language Model"
                    Style="{StaticResource TitleTextBlockStyle}"
                    Margin="10"/>
            <TextBlock Text="The Language Model APIs let you complete text and generate embedding vectors from a given string of text."
                    Style="{StaticResource BodyTextBlockStyle}"
                    Margin="10"/>

            <controls:ModelInitializationControl SourceFile="Examples/LanguageModelInit.md"/>

            <TextBlock Text="Text Completion"
                    Margin="10"
                    Style="{StaticResource SubtitleTextBlockStyle}"/>
            <TextBlock Text="Text completion language models involve using advanced machine learning models to predict and generate the next sequence of words or sentences based on a given input prompt. These models, such as Phi-3, are trained on vast amounts of text data and can understand and generate human-like text that completes a given input prompt."
                    Style="{StaticResource BodyTextBlockStyle}"
                    Margin="10"/>

            <TextBlock Text="Select between the samples below using the tabs. Enter your prompt and generate text using the button."
                    Style="{StaticResource BodyTextBlockStyle}"
                    Margin="10"/>

            <Border BorderThickness="1"
                    CornerRadius="10"
                    BorderBrush="{ThemeResource CardBackgroundFillColorSecondaryBrush}"
                    Background="{ThemeResource CardBackgroundFillColorDefault}"
                    Margin="10">
                <TabView IsAddTabButtonVisible="False">
                    <TabView.TabItems>
                        <!--  Text Completion With progress  -->
                        <TabViewItem Header="GenerateResponse with Progress"
                                IsClosable="False">
                            <StackPanel Orientation="Vertical"
                                    HorizontalAlignment="Stretch"
                                    Margin="20">
                                <TextBlock>This sample shows request with cancellable progress.</TextBlock>
                                <TextBox Margin="10"
                                        Header="Prompt:"
                                         PlaceholderText="Enter your prompt here"
                                         Text="{Binding Prompt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         IsReadOnly="{Binding GenerateResponseWithProgressCommand.IsExecuting}"
                                         IsEnabled="{Binding IsAvailable}"
                                         AutomationProperties.Name="multi-line TextBox"
                                         AcceptsReturn="True"
                                         TextWrapping="Wrap"/>
                                <TextBox  Margin="10"
                                        Header="Language Model Result:"
                                          Text="{Binding ResponseProgress}"
                                          IsReadOnly="True"
                                          IsEnabled="{Binding IsAvailable}"
                                          TextWrapping="Wrap"/>

                                <TextBox Header="Generate Response Error:"
                                        Text="{Binding GenerateResponseWithProgressCommand.Error.Message}"
                                        IsReadOnly="True"
                                        TextWrapping="Wrap"
                                        Visibility="{Binding GenerateResponseCommand.Error, Converter={StaticResource NullToVisibilityConverter}}"/>

                                <StackPanel Orientation="Horizontal"
                                        Margin="10">
                                    <Button Command="{Binding GenerateResponseWithProgressCommand}"
                                            CommandParameter="{Binding Prompt}"
                                            Margin="0,0,10,0">Generate Response with Progress</Button>
                                    <ProgressRing Visibility="{Binding GenerateResponseWithProgressCommand.IsExecuting, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                    <Button Margin="5"
                                            Command="{Binding GenerateResponseWithProgressCommand.CancelCommand}"
                                            Visibility="{Binding GenerateResponseWithProgressCommand.IsExecuting, Converter={StaticResource BoolToVisibilityConverter}}">
                                        <SymbolIcon Symbol="Cancel"/>
                                    </Button>
                                </StackPanel>
                                <controls:CodeBlockControl SourceFile="Examples/LanguageModelWithProgress.md"
                                        Margin="10"/>
                            </StackPanel>
                        </TabViewItem>
                        <!--  Text Completion With progress and options -->
                        <TabViewItem Header="GenerateResponse with options"
                                IsClosable="False">
                            <StackPanel Orientation="Vertical"
                                    HorizontalAlignment="Stretch"
                                    Margin="20">
                                <TextBox Margin="10"
                                        Header="Prompt:"
                                         PlaceholderText="Enter your prompt here"
                                         Text="{Binding Prompt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         IsReadOnly="{Binding GenerateResponseWithProgressCommand.IsExecuting}"
                                         IsEnabled="{Binding IsAvailable}"
                                         AutomationProperties.Name="multi-line TextBox"
                                         AcceptsReturn="True"
                                         TextWrapping="Wrap"/>
                                <StackPanel>
                                    <TextBlock Style="{StaticResource BodyStrongTextBlockStyle}"> Content Filtering</TextBlock>
                                    <RichTextBlock TextWrapping="WrapWholeWords">
                                        <Paragraph>
                                            <Run FontWeight="Bold">Prompt</Run> Minimum content level to block.
                                        </Paragraph>
                                    </RichTextBlock>
                                    <Grid ColumnDefinitions="Auto,Auto,Auto,Auto" HorizontalAlignment="Left">
                                        <StackPanel  Grid.Column="0" Width="200" Margin="10">
                                            <TextBlock Text="Hateful content block:"/>
                                            <ComboBox SelectedItem="{Binding HateContentSevToBlockForPrompt, Mode=TwoWay}" ItemsSource="{Binding ContentFilterSeverityLevels}" ItemTemplate="{StaticResource SeverityLevelItemTemplate}" IsEnabled="{Binding IsAvailable}"/>
                                        </StackPanel>
                                        <StackPanel  Grid.Column="1" Width="200" Margin="10">
                                            <TextBlock Text="Sexual content block:"/>
                                            <ComboBox SelectedItem="{Binding SexualContentSevToBlockForPrompt, Mode=TwoWay}" ItemsSource="{Binding ContentFilterSeverityLevels}" ItemTemplate="{StaticResource SeverityLevelItemTemplate}" IsEnabled="{Binding IsAvailable}"/>
                                        </StackPanel>
                                        <StackPanel  Grid.Column="2" Width="200" Margin="10">
                                            <TextBlock Text="Violent content block:"/>
                                            <ComboBox SelectedItem="{Binding ViolentContentSevToBlockForPrompt, Mode=TwoWay}" ItemsSource="{Binding ContentFilterSeverityLevels}" ItemTemplate="{StaticResource SeverityLevelItemTemplate}" IsEnabled="{Binding IsAvailable}"/>
                                        </StackPanel>
                                        <StackPanel Grid.Column="3" Width="200" Margin="10">
                                            <TextBlock Text="Self harm content block:"/>
                                            <ComboBox SelectedItem="{Binding SelfHarmContentSevToBlockForPrompt, Mode=TwoWay}" ItemsSource="{Binding ContentFilterSeverityLevels}" ItemTemplate="{StaticResource SeverityLevelItemTemplate}" IsEnabled="{Binding IsAvailable}"/>
                                        </StackPanel>
                                    </Grid>

                                    <!-- ContentFilterOptions for response -->
                                    <RichTextBlock TextWrapping="WrapWholeWords">
                                        <Paragraph>
                                            <Run FontWeight="Bold">Response</Run> Minimum content level to block.
                                        </Paragraph>
                                    </RichTextBlock>
                                    <Grid ColumnDefinitions="Auto,Auto,Auto,Auto"  HorizontalAlignment="Left">
                                        <StackPanel  Grid.Column="0" Width="200" Margin="10">
                                            <TextBlock Text="Hateful content block:"/>
                                            <ComboBox SelectedItem="{Binding HateContentSevToBlockForResponse, Mode=TwoWay}" ItemsSource="{Binding ContentFilterSeverityLevels}" ItemTemplate="{StaticResource SeverityLevelItemTemplate}" IsEnabled="{Binding IsAvailable}"/>
                                        </StackPanel>
                                        <StackPanel  Grid.Column="1" Width="200" Margin="10">
                                            <TextBlock Text="Sexual content block:"/>
                                            <ComboBox SelectedItem="{Binding SexualContentSevToBlockForResponse, Mode=TwoWay}" ItemsSource="{Binding ContentFilterSeverityLevels}" ItemTemplate="{StaticResource SeverityLevelItemTemplate}" IsEnabled="{Binding IsAvailable}"/>
                                        </StackPanel>
                                        <StackPanel  Grid.Column="2" Width="200" Margin="10">
                                            <TextBlock Text="Violent content block:"/>
                                            <ComboBox SelectedItem="{Binding ViolentContentSevToBlockForResponse, Mode=TwoWay}" ItemsSource="{Binding ContentFilterSeverityLevels}" ItemTemplate="{StaticResource SeverityLevelItemTemplate}" IsEnabled="{Binding IsAvailable}"/>
                                        </StackPanel>
                                        <StackPanel  Grid.Column="3" Width="200" Margin="10">
                                            <TextBlock Text="Self harm content block:"/>
                                            <ComboBox SelectedItem="{Binding SelfHarmContentSevToBlockForResponse, Mode=TwoWay}" ItemsSource="{Binding ContentFilterSeverityLevels}" ItemTemplate="{StaticResource SeverityLevelItemTemplate}" IsEnabled="{Binding IsAvailable}"/>
                                        </StackPanel>
                                    </Grid>
                                </StackPanel>

                                <TextBox  Margin="10"
                                        Header="Language Model Result:"
                                        Text="{Binding ResponseProgress}"
                                        IsReadOnly="True"
                                        IsEnabled="{Binding IsAvailable}"
                                        TextWrapping="Wrap"/>

                                <TextBox Header="Generate Response Error:"
                                        Text="{Binding GenerateResponseWithContextProgressCommand.Error.Message}"
                                        IsReadOnly="True"
                                        TextWrapping="Wrap"
                                        Visibility="{Binding GenerateResponseWithContextProgressCommand.Error, Converter={StaticResource NullToVisibilityConverter}}"/>

                                <StackPanel Orientation="Horizontal"
                                        Margin="10">
                                    <Button Command="{Binding GenerateResponseWithOptionsAndProgressCommand}"
                                            CommandParameter="{Binding Prompt}"
                                            Margin="0,0,10,0">Generate Response with Progress</Button>
                                    <ProgressRing Visibility="{Binding GenerateResponseWithOptionsAndProgressCommand.IsExecuting, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                    <Button Margin="5"
                                            Command="{Binding GenerateResponseWithOptionsAndProgressCommand.CancelCommand}"
                                            Visibility="{Binding GenerateResponseWithOptionsAndProgressCommand.IsExecuting, Converter={StaticResource BoolToVisibilityConverter}}">
                                        <SymbolIcon Symbol="Cancel"/>
                                    </Button>
                                </StackPanel>
                                <controls:CodeBlockControl SourceFile="Examples/LanguageModelWithOptionsAndProgress.md"
                                        Margin="10"/>
                            </StackPanel>
                        </TabViewItem>
                        <!--  Text Completion With context  -->
                        <TabViewItem Header="GenerateResponse with Context"
                                IsClosable="False">
                            <StackPanel Orientation="Vertical"
                                    HorizontalAlignment="Stretch"
                                    Margin="20">
                                <TextBox Margin="10"
                                        Header="Prompt:"
                                         PlaceholderText="Enter your prompt here"
                                         Text="{Binding Prompt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         IsReadOnly="{Binding GenerateResponseWithProgressCommand.IsExecuting}"
                                         IsEnabled="{Binding IsAvailable}"
                                         AutomationProperties.Name="multi-line TextBox"
                                         AcceptsReturn="True"
                                         TextWrapping="Wrap"/>

                                <TextBox Margin="10"
                                        Header="Context:"
                                         PlaceholderText="Enter context for LanguageModel here"
                                         Text="{Binding Context, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         IsReadOnly="{Binding GenerateResponseWithProgressCommand.IsExecuting}"
                                         IsEnabled="{Binding IsAvailable}"
                                         AutomationProperties.Name="multi-line TextBox"
                                         AcceptsReturn="True"
                                         TextWrapping="Wrap"/>

                                <TextBox  Margin="10"
                                        Header="Language Model Result:"
                                          Text="{Binding ResponseProgress}"
                                          IsReadOnly="True"
                                          IsEnabled="{Binding IsAvailable}"
                                          TextWrapping="Wrap"/>

                                <TextBox Header="Generate Response Error:"
                                        Text="{Binding GenerateResponseWithContextProgressCommand.Error.Message}"
                                        IsReadOnly="True"
                                        TextWrapping="Wrap"
                                        Visibility="{Binding GenerateResponseWithContextProgressCommand.Error, Converter={StaticResource NullToVisibilityConverter}}"/>

                                <StackPanel Orientation="Horizontal"
                                        Margin="10">
                                    <Button Command="{Binding GenerateResponseWithContextProgressCommand}"
                                            CommandParameter="{Binding Prompt}"
                                            Margin="0,0,10,0">Generate Response with Progress</Button>
                                    <ProgressRing Visibility="{Binding GenerateResponseWithContextProgressCommand.IsExecuting, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                    <Button Margin="5"
                                            Command="{Binding GenerateResponseWithContextProgressCommand.CancelCommand}"
                                            Visibility="{Binding GenerateResponseWithContextProgressCommand.IsExecuting, Converter={StaticResource BoolToVisibilityConverter}}">
                                        <SymbolIcon Symbol="Cancel"/>
                                    </Button>
                                </StackPanel>
                                <controls:CodeBlockControl SourceFile="Examples/LanguageModelWithContext.md"
                                        Margin="10"/>
                            </StackPanel>
                        </TabViewItem>
                    </TabView.TabItems>
                </TabView>
            </Border>

            <!-- Text Intelligence -->
            <TextBlock Text="Text Intelligence"
           Margin="10"
           Style="{StaticResource SubtitleTextBlockStyle}"/>
            <TextBlock Margin="10" TextWrapping="WrapWholeWords">
                Select between a predefined set of Text Intelligence skills to perform common operations on input text.
                We are using default values for Temp, TopP and TopK params in the sample.
            </TextBlock>
            <RichTextBlock Margin="10" TextWrapping="WrapWholeWords">
                <Paragraph>
                    <Run FontWeight="Bold">Summarize</Run> : Summarize the prompt text.
                </Paragraph>
                <Paragraph>
                    <Run FontWeight="Bold">Rewrite</Run> : Rewrite, correct grammar, and enhance word choice of the prompt.
                </Paragraph>
                <!--There's a known bug for Text-To-Table skill where it will always return empty string. This has been fixed. Please uncomment this one afrer picking up a new nuget release-->
                <!--
                <Paragraph>
                    <Run FontWeight="Bold">Text To table</Run> : Convert given prompt to table format.
                </Paragraph>
                -->
            </RichTextBlock>
            <Border BorderThickness="1"
            CornerRadius="10"
            BorderBrush="{ThemeResource CardBackgroundFillColorSecondaryBrush}"
            Background="{ThemeResource CardBackgroundFillColorDefault}"
            Margin="10">
                <TabView IsAddTabButtonVisible="False">
                    <TabView.TabItems>
                        <!-- Summarize Section -->
                        <TabViewItem Header="Summarize"
                         IsClosable="False">
                            <StackPanel Orientation="Vertical"
                            HorizontalAlignment="Stretch"
                            Margin="20">
                                <TextBox Margin="10"
                             Header="Prompt:"
                             PlaceholderText="Enter your prompt here"
                             Text="{Binding TextIntelligencePrompt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             IsEnabled="{Binding IsAvailable}"
                             AutomationProperties.Name="multi-line TextBox"
                             AcceptsReturn="True"
                             TextWrapping="Wrap"/>
                                <TextBox Margin="10"
                             Header="Language Model Result:"
                             Text="{Binding ResponseProgressTextIntelligence}"
                             IsReadOnly="True"
                             IsEnabled="{Binding IsAvailable}"
                             TextWrapping="Wrap"/>
                                <StackPanel Orientation="Horizontal"
                                Margin="10">
                                    <Button Command="{Binding GenerateResponseWithTextIntelligenceSummarizeSkills}"
                                CommandParameter="{Binding TextIntelligencePrompt}"
                                Margin="0,0,10,0">Generate Summarize Response</Button>
                                    <ProgressRing Visibility="{Binding GenerateResponseWithTextIntelligenceSummarizeSkills.IsExecuting, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                </StackPanel>
                                <controls:CodeBlockControl SourceFile="Examples/TextIntelligenceSummarize.md"
                                 Margin="10"/>
                            </StackPanel>
                        </TabViewItem>
                        <!-- Rewrite Section -->
                        <TabViewItem Header="Rewrite"
                         IsClosable="False">
                            <StackPanel Orientation="Vertical"
                            HorizontalAlignment="Stretch"
                            Margin="20">
                                <TextBox Margin="10"
                             Header="Prompt:"
                             PlaceholderText="Enter your prompt here"
                             Text="{Binding TextIntelligencePrompt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             IsEnabled="{Binding IsAvailable}"
                             AutomationProperties.Name="multi-line TextBox"
                             AcceptsReturn="True"
                             TextWrapping="Wrap"/>
                                <TextBox Margin="10"
                             Header="Language Model Result:"
                             Text="{Binding ResponseProgressTextIntelligence}"
                             IsReadOnly="True"
                             IsEnabled="{Binding IsAvailable}"
                             TextWrapping="Wrap"/>
                                <StackPanel Orientation="Horizontal"
                                Margin="10">
                                    <Button Command="{Binding GenerateResponseWithTextIntelligenceRewriteSkills}"
                                CommandParameter="{Binding TextIntelligencePrompt}"
                                Margin="0,0,10,0">Generate Rewrite Response</Button>
                                    <ProgressRing Visibility="{Binding GenerateResponseWithTextIntelligenceRewriteSkills.IsExecuting, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                </StackPanel>
                                <controls:CodeBlockControl SourceFile="Examples/TextIntelligenceRewrite.md"
                                Margin="10"/>
                            </StackPanel>
                        </TabViewItem>
                        <!--There's a known bug for Text-To-Table skill where it will always return empty string. This has been fixed. Please uncomment this one afrer picking up a new nuget release-->
                        <!-- TextToTable Section -->
                        <!--
                        <TabViewItem Header="Text To Table"
                         IsClosable="False">
                            <StackPanel Orientation="Vertical"
                            HorizontalAlignment="Stretch"
                            Margin="20">
                                <TextBox Margin="10"
                             Header="Prompt:"
                             PlaceholderText="Enter your prompt here"
                             Text="{Binding TextIntelligencePrompt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             IsEnabled="{Binding IsAvailable}"
                             AutomationProperties.Name="multi-line TextBox"
                             AcceptsReturn="True"
                             TextWrapping="Wrap"/>
                                <TextBox Margin="10"
                             Header="Language Model Result:"
                             Text="{Binding GenerateResponseWithTextIntelligenceTextToTableSkills.Result}"
                             IsReadOnly="True"
                             IsEnabled="{Binding IsAvailable}"
                             TextWrapping="Wrap"/>
                                <StackPanel Orientation="Horizontal"
                                Margin="10">
                                    <Button Command="{Binding GenerateResponseWithTextIntelligenceTextToTableSkills}"
                                CommandParameter="{Binding TextIntelligencePrompt}"
                                Margin="0,0,10,0">Generate Text To Table Response</Button>
                                    <ProgressRing Visibility="{Binding GenerateResponseWithTextIntelligenceTextToTableSkills.IsExecuting, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                </StackPanel>
                                <controls:CodeBlockControl SourceFile="Examples/TextIntelligenceTextToTable.md"
                                Margin="10"/>
                            </StackPanel>
                        </TabViewItem>
                        -->
                    </TabView.TabItems>
                </TabView>
            </Border>

            <!--  Text Embedding  -->
            <TextBlock Text="Text Embedding"
                    Style="{StaticResource SubtitleTextBlockStyle}"
                    Margin="10"/>
            <TextBlock Text="Text embeddings are numerical representations of text that capture the semantic meaning of words, phrases, or entire documents. These embeddings are typically high-dimensional vectors where similar texts have similar vector representations. Text embeddings are used in various natural language processing (NLP) tasks such as text classification, sentiment analysis, and machine translation."
                    Style="{StaticResource BodyTextBlockStyle}"
                    Margin="10"/>

            <TextBlock Text="To generate a text embedding of a piece of text, enter the text into the input below and press the button to see its resulting embedding vector in the results view on the right."
                    Style="{StaticResource BodyTextBlockStyle}"
                    Margin="10"/>
            <Border Margin="10"
                    CornerRadius="10"
                    BorderThickness="2"
                    BorderBrush="{ThemeResource CardBackgroundFillColorSecondaryBrush}"
                    Background="{ThemeResource CardBackgroundFillColorSecondary}">
                <StackPanel Orientation="Vertical">
                    <TextBox Header="Text to embed:"
                             Margin="10"
                             PlaceholderText="Type some text that you wish to have embedded here"
                             Text="{Binding EmbeddingPrompt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             IsReadOnly="{Binding GenerateEmbeddingVectorCommand.IsExecuting}"
                             AutomationProperties.Name="multi-line TextBox"
                             AcceptsReturn="True"
                             TextWrapping="Wrap"/>
                    <TextBox Header="Embedded Vector Result:"
                             Margin="10"
                             Text="{Binding GenerateEmbeddingVectorCommand.Result, Converter={StaticResource EmbeddingVectorConverter}}"
                             IsReadOnly="True"
                             TextWrapping="Wrap"/>

                    <TextBox Header="Generate Response Error:"
                             Text="{Binding GenerateEmbeddingVectorCommand.Error.Message}"
                             IsReadOnly="True"
                             TextWrapping="Wrap"
                             Margin="10"
                             Visibility="{Binding GenerateEmbeddingVectorCommand.Error, Converter={StaticResource NullToVisibilityConverter}}"/>
                    <StackPanel Orientation="Horizontal"
                            Margin="10">
                        <Button Command="{Binding GenerateEmbeddingVectorCommand}"
                                CommandParameter="{Binding EmbeddingPrompt}"
                                Margin="0,0,10,0">Embed Text</Button>
                        <ProgressRing Visibility="{Binding GenerateEmbeddingVectorCommand.IsExecuting, Converter={StaticResource BoolToVisibilityConverter}}"/>
                    </StackPanel>

                    <controls:CodeBlockControl SourceFile="Examples/LanguageModelEmbedding.md"
                            Margin="10"/>
                </StackPanel>
            </Border>
        </StackPanel>
    </ScrollViewer>
</Page>
